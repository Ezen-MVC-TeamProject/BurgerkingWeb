package com.burger.controller;

import com.burger.controller.action.Action;
import com.burger.controller.action.AppGuideFormAction;
import com.burger.controller.action.BrandStroyFormAction;
import com.burger.controller.action.CompletAction;
import com.burger.controller.action.ContractAction;
import com.burger.controller.action.ContractFormAction;
import com.burger.controller.action.ContractFrmAction;
import com.burger.controller.action.DeliveryFormAction;
import com.burger.controller.action.DeliveryMypageFormAction;
import com.burger.controller.action.DeliveryOrderDetailAction;
import com.burger.controller.action.DeliveryUseFormAction;
import com.burger.controller.action.EventDetailFormAction;
import com.burger.controller.action.EventListFormAction;
import com.burger.controller.action.EventTab2Action;
import com.burger.controller.action.EventTab3Action;
import com.burger.controller.action.FaqFormAction;
import com.burger.controller.action.FindIdAction;
import com.burger.controller.action.FindIdFormAction;
import com.burger.controller.action.FindPwdAction;
import com.burger.controller.action.FindPwdFormAction;
import com.burger.controller.action.AddCartAction;
import com.burger.controller.action.CartDeleteFormAction;
import com.burger.controller.action.DeliveryAddMaterialAction;
import com.burger.controller.action.DeliveryCartFormAction;
import com.burger.controller.action.DeliveryCartOrderAction;
import com.burger.controller.action.DeliveryDetailFormAction;
import com.burger.controller.action.DeliveryOrderListFormAction;
import com.burger.controller.action.FindZipNumAction;
import com.burger.controller.action.IdCheckFormAction;
import com.burger.controller.action.IndexAction;
import com.burger.controller.action.JoinFormAction;
import com.burger.controller.action.JoinPageAction;
import com.burger.controller.action.JoinPageFormAction;
import com.burger.controller.action.LegalAction;
import com.burger.controller.action.LoginAction;
import com.burger.controller.action.LoginFormAction;
import com.burger.controller.action.LogoutAction;
import com.burger.controller.action.MemberDeleteAction;
import com.burger.controller.action.MemberUpdateAction;
import com.burger.controller.action.MemberUpdateFormAction;
import com.burger.controller.action.MenuListFormAction;
import com.burger.controller.action.MenudetailFormAction;
import com.burger.controller.action.MinusQuantityAction;
import com.burger.controller.action.PlusQuantityAction;
import com.burger.controller.action.MyAddressAction;
import com.burger.controller.action.MyAddressFormAction;
import com.burger.controller.action.MyAddressUpdateAction;
import com.burger.controller.action.NonMemberFormAction;
import com.burger.controller.action.PassCheckAction;
import com.burger.controller.action.PassCheckFormAction;
import com.burger.controller.action.PopUp1Action;
import com.burger.controller.action.PopUp2Action;
import com.burger.controller.action.PrivacyAction;
import com.burger.controller.action.QnaDeleteAction;
import com.burger.controller.action.QnaFormAction;
import com.burger.controller.action.QnaViewAction;
import com.burger.controller.action.QnaWriteFormAction;
import com.burger.controller.action.TermsAction;
import com.burger.controller.action.UpdatePwdAction;
import com.burger.controller.action.VideoPolicyAction;
import com.burger.controller.admin.action.AdminAction;
import com.burger.controller.admin.action.AdminLoginAction;
import com.burger.controller.admin.action.AdminLogoutAction;
import com.burger.controller.admin.action.AdminProductListAction;
import com.burger.controller.admin.action.AdminProductUpdateFormAction;
import com.burger.controller.admin.action.AdminShortProductDetailAction;
import com.burger.controller.admin.action.AdminshortProductListAction;
import com.burger.controller.admin.action.AdminProductDetailAction;
import com.burger.controller.admin.action.AdminEventDeleteAction;
import com.burger.controller.admin.action.AdminEventDetailAction;
import com.burger.controller.admin.action.AdminEventListAction;
import com.burger.controller.admin.action.AdminEventUpdateAction;
import com.burger.controller.admin.action.AdminEventUpdateFormAction;
import com.burger.controller.admin.action.AdminEventWriteAction;
import com.burger.controller.admin.action.AdminEventWriteFormAction;
import com.burger.controller.admin.action.AdminMemberDeleteAction;
import com.burger.controller.admin.action.AdminMemberListAction;
import com.burger.controller.admin.action.AdminMemberUpdateAction;
import com.burger.controller.admin.action.AdminMemberUpdateFormAction;
import com.burger.controller.admin.action.AdminOrderListAction;
import com.burger.controller.admin.action.AdminOrderSaveAction;
import com.burger.controller.admin.action.AdminProductDeleteAction;
import com.burger.controller.admin.action.AdminProductUpdateAction;
import com.burger.controller.admin.action.AdminProductWriteAction;
import com.burger.controller.admin.action.AdminProductWriteFormAction;
import com.burger.controller.admin.action.AdminQnaDeleteAction;
import com.burger.controller.admin.action.AdminQnaDetailAction;
import com.burger.controller.admin.action.AdminQnaListAction;
import com.burger.controller.admin.action.AdminQnaRepsaveAction;
import com.burger.controller.admin.action.AdminShortProductUpdateAction;
import com.burger.controller.admin.action.AdminShortProductUpdateFormAction;
import com.burger.controller.admin.action.AdminShortProductWriteAction;
import com.burger.controller.admin.action.AdminShortProductWriteFormAction;
import com.burger.controller.admin.action.QnaWriteAction;
public class ActionFactory {
	private ActionFactory() {}
	private static ActionFactory ist = new ActionFactory();
	public static ActionFactory getInstance() {	 return ist;	 }
	
	public Action getAction(String command) {
		Action ac = null;
		
		if (command.equals("index")) ac = new IndexAction();
		else if(command.equals("loginForm")) ac = new LoginFormAction();
		else if(command.equals("login")) ac = new LoginAction();
		else if(command.equals("terms")) ac = new TermsAction();
		else if(command.equals("privacy")) ac = new PrivacyAction();
		else if(command.equals("legal")) ac = new LegalAction();
		else if(command.equals("videoPolicy")) ac = new VideoPolicyAction();
		else if(command.equals("menuListForm")) ac = new MenuListFormAction();
		else if(command.equals("eventListForm")) ac = new EventListFormAction();
		else if(command.equals("brandStroyForm")) ac = new BrandStroyFormAction();
		else if(command.equals("deliveryForm")) ac = new DeliveryFormAction();
		else if(command.equals("qnaForm")) ac = new QnaFormAction();
		else if(command.equals("faqForm")) ac = new FaqFormAction();
		else if(command.equals("appGuideForm")) ac = new AppGuideFormAction();
		else if(command.equals("deliveryUseForm")) ac = new DeliveryUseFormAction();
		else if(command.equals("joinForm")) ac = new JoinFormAction();
		else if(command.equals("logout")) ac = new LogoutAction();
		else if(command.equals("findIdForm")) ac = new FindIdFormAction();
		else if(command.equals("findPwdForm")) ac = new FindPwdFormAction();
		else if(command.equals("menudetailForm")) ac = new MenudetailFormAction();
		else if(command.equals("findId")) ac = new FindIdAction();
		else if(command.equals("findPwd")) ac = new FindPwdAction();
		else if(command.equals("updatePwd")) ac = new UpdatePwdAction();
		else if(command.equals("eventTab2")) ac = new EventTab2Action();
		else if(command.equals("eventTab3")) ac = new EventTab3Action();
		else if(command.equals("eventDetailForm")) ac = new EventDetailFormAction();
		else if(command.equals("deliveryOrderListForm")) ac = new DeliveryOrderListFormAction();
		else if(command.equals("deliveryCartForm")) ac = new DeliveryCartFormAction();
		else if(command.equals("deliveryMypageForm")) ac = new DeliveryMypageFormAction();
		else if(command.equals("admin")) ac = new AdminAction();
		else if(command.equals("adminLogin")) ac = new AdminLoginAction();
		else if(command.equals("adminLogout")) ac = new AdminLogoutAction();
		else if(command.equals("adminProductList")) ac = new AdminProductListAction();
		else if(command.equals("adminShortProductList")) ac = new AdminshortProductListAction();
		else if(command.equals("adminProductDetail")) ac = new AdminProductDetailAction();
		else if(command.equals("adminShortProductDetail")) ac= new AdminShortProductDetailAction();
		else if(command.equals("adminProductUpdateForm")) ac = new AdminProductUpdateFormAction();
		else if(command.equals("deliveryDetail")) ac = new DeliveryDetailFormAction();
		else if(command.equals("deliveryAddMaterial")) ac = new DeliveryAddMaterialAction();
		else if(command.equals("addCart")) ac = new AddCartAction();
		else if(command.equals("deliveryCartForm")) ac = new DeliveryCartFormAction();
		else if(command.equals("cartDelete")) ac = new CartDeleteFormAction();
		else if(command.equals("minusQuantity")) ac = new MinusQuantityAction();
		else if(command.equals("plusQuantity")) ac = new PlusQuantityAction();
		else if(command.equals("deliveryCartOrder")) ac = new DeliveryCartOrderAction();
		else if(command.equals("qnaView")) ac = new QnaViewAction();
		else if(command.equals("QnaDelete")) ac = new QnaDeleteAction();
		else if(command.equals("qnaWriteForm")) ac = new QnaWriteFormAction();
		else if(command.equals("qnaWrite")) ac = new QnaWriteAction();
		else if(command.equals("passCheckForm")) ac = new PassCheckFormAction();
		else if(command.equals("passCheck")) ac = new PassCheckAction();
		else if(command.equals("contract")) ac = new ContractAction(); 
		else if(command.equals("contractForm")) ac = new ContractFormAction(); 
		else if(command.equals("popup1")) ac = new PopUp1Action(); 
		else if(command.equals("popup2")) ac = new PopUp2Action(); 	
		else if(command.equals("joinpage")) ac = new JoinPageAction(); 	
		else if(command.equals("contractFrm")) ac = new ContractFrmAction(); 
		else if(command.equals("idCheckForm")) ac = new IdCheckFormAction(); 	
		else if(command.equals("joinpageForm")) ac = new JoinPageFormAction(); 
		else if(command.equals("complet")) ac = new CompletAction();
		else if(command.equals("deliveryMypageForm")) ac = new DeliveryMypageFormAction();
	    else if(command.equals("memberUpdateForm")) ac = new MemberUpdateFormAction();
	    else if(command.equals("myAddress")) ac = new MyAddressAction();
	    else if(command.equals("updateMember")) ac = new MemberUpdateAction();
	    else if(command.equals("memberDelete")) ac = new MemberDeleteAction();
	    else if(command.equals("findZipNum")) ac = new FindZipNumAction();
	    else if(command.equals("myAddressForm")) ac = new MyAddressFormAction();
	    else if(command.equals("myAddressUpdate")) ac = new MyAddressUpdateAction();
	    else if(command.equals("deliveryOrderDetail")) ac = new DeliveryOrderDetailAction();
	    else if(command.equals("nonmemberForm")) ac = new NonMemberFormAction(); 
		else if(command.equals("admin")) ac = new AdminAction();
		else if(command.equals("adminLogin")) ac = new AdminLoginAction();
		else if(command.equals("adminLogout")) ac = new AdminLogoutAction();
		else if(command.equals("adminProductList")) ac = new AdminProductListAction();
		else if(command.equals("adminShortProductList")) ac = new AdminshortProductListAction();
		else if(command.equals("adminProductDetail")) ac = new AdminProductDetailAction();
		else if(command.equals("adminShortProductDetail")) ac= new AdminShortProductDetailAction();
		else if(command.equals("adminProductUpdateForm")) ac = new AdminProductUpdateFormAction();
		else if(command.equals("adminProductUpdate")) ac = new AdminProductUpdateAction();
		else if(command.equals("adminShortProductUpdate")) ac = new AdminShortProductUpdateAction();
		else if(command.equals("adminShortProductUpdateForm")) ac = new AdminShortProductUpdateFormAction();
		else if(command.equals("adminProductWriteForm")) ac = new AdminProductWriteFormAction();
		else if(command.equals("adminProductWrite")) ac = new AdminProductWriteAction();
		else if(command.equals("adminShortProductWriteForm")) ac = new AdminShortProductWriteFormAction();
		else if(command.equals("adminShortProductWrite")) ac = new AdminShortProductWriteAction();
		else if(command.equals("adminProductDelete")) ac = new AdminProductDeleteAction();
		else if(command.equals("adminMemberList")) ac = new AdminMemberListAction();
		else if(command.equals("adminMemberDelete")) ac = new AdminMemberDeleteAction();
		else if(command.equals("adminMemberUpdateForm")) ac = new AdminMemberUpdateFormAction();
		else if(command.equals("adminMemberUpdate")) ac = new AdminMemberUpdateAction();
		else if(command.equals("adminEventList")) ac = new AdminEventListAction();
		else if(command.equals("adminEventDelete")) ac = new AdminEventDeleteAction();
		else if(command.equals("adminEventDetail")) ac = new AdminEventDetailAction();
		else if(command.equals("adminEventUpdateForm")) ac = new AdminEventUpdateFormAction();
		else if(command.equals("adminEventUpdate")) ac = new AdminEventUpdateAction();
		else if(command.equals("adminEventWriteForm")) ac = new AdminEventWriteFormAction();
		else if(command.equals("adminEventWrite")) ac = new AdminEventWriteAction();
		else if(command.equals("adminQnaList")) ac = new AdminQnaListAction();
		else if(command.equals("adminQnaDelete")) ac = new AdminQnaDeleteAction();
		else if(command.equals("adminQnaDetail")) ac = new AdminQnaDetailAction();
		else if(command.equals("adminQnaRepsave")) ac = new AdminQnaRepsaveAction();
		else if(command.equals("adminOrderList")) ac = new AdminOrderListAction();
		else if(command.equals("adminOrderSave")) ac = new AdminOrderSaveAction();

		return ac;
	}
}

